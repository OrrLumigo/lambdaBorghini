{"remainingRequest":"/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/node_modules/babel-loader/lib/index.js!/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/src/lib/SSM.ts","dependencies":[{"path":"/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/src/lib/SSM.ts","mtime":1645178665183},{"path":"/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/babel.config.js","mtime":1636055769133},{"path":"/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/.babelrc","mtime":1636055769116},{"path":"/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXIiOwoKY29uc3Qgc3NtID0gcmVxdWlyZSgnYXdzLXNkay9jbGllbnRzL3NzbScpOwoKY29uc3QgU1NNID0gbmV3IHNzbSgpOwpleHBvcnQgY29uc3QgaW5pdFNlY3JldCA9IGFzeW5jIChwYXJhbWV0ZXJTdG9yZU5hbWUsIGVudlZhck5hbWUpID0+IHsKICBpZiAoIXByb2Nlc3MuZW52W2VudlZhck5hbWVdKSB7CiAgICB2YXIgX1BhcmFtZXRlciRQYXJhbWV0ZXIsIF9QYXJhbWV0ZXIkUGFyYW1ldGVyMjsKCiAgICBjb25zdCBQYXJhbWV0ZXIgPSBhd2FpdCBTU00uZ2V0UGFyYW1ldGVyKHsKICAgICAgTmFtZTogcGFyYW1ldGVyU3RvcmVOYW1lLAogICAgICBXaXRoRGVjcnlwdGlvbjogdHJ1ZQogICAgfSkucHJvbWlzZSgpOwogICAgcHJvY2Vzcy5lbnZbZW52VmFyTmFtZV0gPSAoX1BhcmFtZXRlciRQYXJhbWV0ZXIgPSBQYXJhbWV0ZXIuUGFyYW1ldGVyKSA9PT0gbnVsbCB8fCBfUGFyYW1ldGVyJFBhcmFtZXRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX1BhcmFtZXRlciRQYXJhbWV0ZXIuVmFsdWU7CiAgICByZXR1cm4gKF9QYXJhbWV0ZXIkUGFyYW1ldGVyMiA9IFBhcmFtZXRlci5QYXJhbWV0ZXIpID09PSBudWxsIHx8IF9QYXJhbWV0ZXIkUGFyYW1ldGVyMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX1BhcmFtZXRlciRQYXJhbWV0ZXIyLlZhbHVlOwogIH0KfTs="},{"version":3,"sources":["/Users/orrlevinger/work/meatup2021/lambdaBorghini/version1/src/lib/SSM.ts"],"names":["ssm","require","SSM","initSecret","parameterStoreName","envVarName","process","env","Parameter","getParameter","Name","WithDecryption","promise","Value"],"mappings":";;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,MAAMC,GAAG,GAAG,IAAIF,GAAJ,EAAZ;AAEA,OAAO,MAAMG,UAAU,GAAG,OAAOC,kBAAP,EAAmCC,UAAnC,KAAyE;AACjG,MAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,UAAZ,CAAL,EAA8B;AAAA;;AAC5B,UAAMG,SAAS,GAAG,MAAMN,GAAG,CAACO,YAAJ,CAAiB;AACvCC,MAAAA,IAAI,EAAEN,kBADiC;AAEvCO,MAAAA,cAAc,EAAE;AAFuB,KAAjB,EAGrBC,OAHqB,EAAxB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,4BAA0BG,SAAS,CAACA,SAApC,yDAA0B,qBAAqBK,KAA/C;AACA,oCAAOL,SAAS,CAACA,SAAjB,0DAAO,sBAAqBK,KAA5B;AACD;AACF,CATM","sourcesContent":["const ssm = require('aws-sdk/clients/ssm');\nconst SSM = new ssm();\n\nexport const initSecret = async (parameterStoreName: string, envVarName: string): Promise<void> => {\n  if (!process.env[envVarName]) {\n    const Parameter = await SSM.getParameter({\n      Name: parameterStoreName,\n      WithDecryption: true,\n    }).promise();\n    process.env[envVarName] = Parameter.Parameter?.Value;\n    return Parameter.Parameter?.Value;\n  }\n};"]}]}